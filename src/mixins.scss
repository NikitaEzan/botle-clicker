
$breakpoints: (
        'xs' : (min-width: 320px),
        'sm' : (min-width: 1024px),
        'md' : (min-width: 1366px),
        'lg' : (min-width: 1920px),
        'only-xs' : (min-width: 320px) and (max-width: 1024px),
        'only-sm' : (min-width: 1024px) and (max-width: 1366px),
        'only-md' : (min-width: 1366px) and (max-width: 1920px)
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin at-xs {
  @include respond-to('xs') {
    @content;
  }
}

@mixin at-sm {
  @include respond-to('sm') {
    @content;
  }
}

@mixin at-md {
  @include respond-to('md') {
    @content;
  }
}

@mixin at-lg {
  @include respond-to('lg') {
    @content;
  }
}

@mixin at-only-xs {
  @include respond-to('only-xs') {
    @content;
  }
}

@mixin at-only-sm {
  @include respond-to('only-sm') {
    @content;
  }
}

@mixin at-only-md {
  @include respond-to('only-md') {
    @content;
  }
}

@mixin tiny-text {
  @include at-xs {
    font-size: 9px;
    line-height: 16px;
  }

  @include at-sm {
    font-size: 11px;
    line-height: 18px;
  }
}

@mixin small-text {
  @include at-xs {
    font-size: 13px;
    line-height: 21px;
  }

  @include at-sm {
    font-size: 14px;
    line-height: 20px;
  }
}

@mixin normal-text {
  @include at-xs {
    font-size: 14px;
    line-height: 22px;
  }

  @include at-sm {
    font-size: $sizeS;
    line-height: $sizeM;
  }
}

@mixin big-text {
  @include at-xs {
    font-size: 16px;
    line-height: 24px;
  }

  @include at-sm {
    font-size: 18px;
    line-height: 26px;
  }
}

@mixin lid-text {
  @include at-xs {
    font-size: 18px;
    line-height: 26px;
  }

  @include at-sm {
    font-size: 20px;
    line-height: 28px;
  }
}

@mixin base-button($height, $padding, $fontSize) {
  width: 100%;
  display: inline-block;
  border: none !important;
  outline: none;
  position: relative;
  overflow: hidden;
  text-decoration: none !important;
  cursor: pointer;
  text-align: center;
  height: $height;
  line-height: $height;
  box-sizing: border-box;
  background: $interactiveColor2;
  color: white;
  border-radius: 2px;
  padding: 0 $padding;
  font-size: $fontSize;
  font-weight: 500;

  text-overflow: ellipsis;
  white-space: nowrap;

  &:hover {
    background: $linkColor;
  }

  &:active {
    background: $linkColor;
  }

  &:disabled {
    background: $lineColor;
    color: $iconColor;

  }
}

@mixin base-button-transparent($height, $padding, $fontSize) {
  display: inline-block;
  outline: none;
  position: relative;
  overflow: hidden;
  text-decoration: none !important;
  cursor: pointer;
  text-align: center;
  height: $height;
  line-height: calc(#{$height} - 2px);
  border-radius: 2px;
  border: 1px solid $lineColor;
  background: transparent;
  padding: 0 $padding;
  font-size: $fontSize;
  font-weight: 500;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: $baseTextColor;

  &:hover {
    border-color: $linkColor;
    color: $linkColor;
  }

  //&:active {
  //  border-color: $linkColor;
  //  color: $linkColor;
  //}
  //
  //&:focus {
  //  border-color: $interactiveColorHover;
  //  color: white;
  //  background: #33985C;
  //}
  //
  //&:disabled {
  //  background: $lineColor;
  //  color: $iconColor;
  //}
}

@mixin base-transition($propertiesArray) {
  $properties: ();

  @each $item in $propertiesArray {
    $properties: append($properties, $item);
    $properties: append($properties, 0.2s);
    $properties: append($properties, linear);

    // Add comma if not dealing with the last item of list
    @if $item != nth($propertiesArray, length($propertiesArray)) {
      $properties: $properties unquote(',');
    }
  }
  transition: $properties;
}

@mixin base-input-text($height, $padding) {
  display: block;
  width: 100%;
  background: white;
  outline: none !important;
  resize: none;
  overflow: hidden;
  border: 1px solid #DDE1E6;
  border-radius: 2px;
  height: $height;
  padding: 0 $padding;
  @include normal-text();

  &:focus {
    // Чтобы текст при фокусе не "прыгал"
    box-shadow: inset 0 0 0 1px $activeColor;
    border: 1px solid $activeColor;
  }

  &:disabled {
    background: $descriptionOnDarkTextColor !important;
    color: $thirdTitleTextColor !important;
    border-color: $descriptionOnDarkTextColor !important;

    ~ .base-label {
      color: $thirdTitleTextColor !important;
    }
  }

  &:hover {
    border-color: $thirdTitleTextColor;
  }

  &:focus::-webkit-input-placeholder {
    color: transparent;
  }
}

@mixin base-textarea($padding) {
  font-family: Arial, Helvetica, sans-serif;
  display: block;
  width: 100%;
  background: white;
  outline: none !important;
  resize: none;
  overflow: hidden;
  border: 1px solid #DDE1E6;
  border-radius: 2px;
  padding: $padding;
  @include normal-text();

  &:focus {
    // Чтобы текст при фокусе не "прыгал"
    box-shadow: inset 0 0 0 1px $activeColor;
    border: 1px solid $activeColor;
  }

  &:disabled {
    background: $descriptionOnDarkTextColor !important;
    color: $thirdTitleTextColor !important;
    border-color: $descriptionOnDarkTextColor !important;

    ~ .base-label {
      color: $thirdTitleTextColor !important;
    }
  }

  &:hover {
    border-color: $thirdTitleTextColor;
  }

  &:focus::-webkit-input-placeholder {
    color: transparent;
  }
}

@mixin box-shadow-default {
  box-shadow: 0px $sizeS $sizeM rgba(47, 52, 68, 0.16);
}

@mixin baseH5 {
  font-weight: 500;

  @include at-xs {
    font-size: 20px;
    line-height: 28px;
  }

  @include at-sm {
    font-size: $sizeM;
    line-height: $sizeL;
  }
}

@mixin baseH6 {
  font-weight: 500;

  @include at-xs {
    font-size: 18px;
    line-height: 26px;
  }

  @include at-sm {
    font-size: 20px;
    line-height: 28px;
  }
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}
}